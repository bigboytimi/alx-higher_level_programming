==================
Division of matrix
==================

This module divides all elements of a matrix and returns a new matrix

=====
Usage
=====

``matrix_divided(matrix, div)`` divides all elements of matrix with a
specified divisor, and returns the result in a new matrix.

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...	[3, 6, 9],
	...	[12, 15, 18]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]


Note that all elements of the matrix should be divided by div, rounded to 2 decimal places

::

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


::

The function does not affect the original matrix

	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]
	
::

The function can also handle floats

	>>> matrix = [
	...	[1.1, -2.2, 3.3],
	...	[4.4, 5.5, -6.6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

::

Integers and floats can also be handled

	>>> matrix = [
	...	[1, -2.2, 3, 4.4, 5],
	...	[-6.6, 7.00, 8, 9.999, 10]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]


==============================
How to handle Invalid Matrices
==============================

The parameter ``matrix`` must be a list of lists with integers and floats as
elements. If ``matrix`` is not a list, a TypeError is raised

::

	>>> matrix = "None"
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

An empty list will not work

	>>> matrix = []
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

An empty list of lists will work.

	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 3))
	[[]]

::

A matrix which is an ordinary list will not succeed

	>>> matrix = [1, 2, 3]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

A matrix must contain only integers and floats

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, "Not a number", 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

A matrix must be of the same size, else a TypeError is raised

	>>> matrix = [
	...	[1, 2, 3, 4],
	...	[5, 6, 7]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size


==============================
How to handle invalid divisors
==============================

The parameter ``div`` must be either an int or float. Otherwise, a TypeError
is raised.

::

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, None))
	Traceback (most recent call last):
	TypeError: div must be a number

::

``div`` must also be non-zero. Otherwise, a ZeroDivisionError is raised.

	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero


